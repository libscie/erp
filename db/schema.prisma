// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

datasource db {
  provider = "postgres"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

// --------------------------------------

model User {
  id             Int        @id @default(autoincrement())
  createdAt      DateTime   @default(now())
  updatedAt      DateTime   @updatedAt
  name           String?
  handle         String     @unique
  email          String?
  avatar         String?
  hashedPassword String?
  role           GlobalRole @default(USER)

  tokens     Token[]
  sessions   Session[]
  Document   Document? @relation(fields: [documentId], references: [id])
  documentId Int?
  Activity   Activity? @relation(fields: [activityId], references: [id])
  activityId Int?
  Budget     Budget?   @relation(fields: [budgetId], references: [id])
  budgetId   Int?
}

enum GlobalRole {
  USER
  EMPLOYEE
  ADMIN
}

model Session {
  id                 Int       @id @default(autoincrement())
  createdAt          DateTime  @default(now())
  updatedAt          DateTime  @updatedAt
  expiresAt          DateTime?
  handle             String    @unique
  hashedSessionToken String?
  antiCSRFToken      String?
  publicData         String?
  privateData        String?

  user   User? @relation(fields: [userId], references: [id])
  userId Int?
}

model Token {
  id          Int       @id @default(autoincrement())
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  hashedToken String
  type        TokenType
  expiresAt   DateTime
  sentTo      String

  user   User @relation(fields: [userId], references: [id])
  userId Int

  @@unique([hashedToken, type])
}

enum TokenType {
  RESET_PASSWORD
}

model Activity {
  id          Int       @id @default(autoincrement())
  updatedAt   DateTime  @updatedAt
  startDate   DateTime  @default(now())
  endDate     DateTime?
  location    String?
  title       String?
  description Json
  authors     User[]
  // people
  // notes
}

model Document {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  title     String
  contents  Json
  authors   User[]
}

model Budget {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  // Time period
  startDate DateTime @default(now())
  endDate   DateTime

  title String

  lineItems     String[]
  lineValues    Decimal[] // in euro
  lineEmissions Decimal[] // in kgCo2

  parents  Budget[] @relation("BudgetToBudget")
  children Budget[] @relation("BudgetToBudget")

  // transactions Transaction[]

  authors User[]
  // approved by
}

// model Transaction {
//   id        Int      @id @default(autoincrement())
//   createdAt DateTime @default(now())
//   updatedAt DateTime @updatedAt

//   Budget   Budget? @relation(fields: [budgetId], references: [id])
//   budgetId Int?
// }
